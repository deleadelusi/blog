[
  {
    "objectID": "posts/post-with-code/index.html",
    "href": "posts/post-with-code/index.html",
    "title": "Post With Sample R codes",
    "section": "",
    "text": "Show Hidden Code\nlibrary(proto)\nlibrary(gsubfn)\nlibrary(tidyverse)\n\ndata(anscombe)  # Load Anscombe's data\n\n## Fancy version (per help file)\n\nff &lt;- y ~ x\nmods &lt;- setNames(as.list(1:4), paste0(\"lm\", 1:4))\n\n# Plot using for loop\nfor(i in 1:4) {\n  ff[2:3] &lt;- lapply(paste0(c(\"y\",\"x\"), i), as.name)\n  ## or   ff[[2]] &lt;- as.name(paste0(\"y\", i))\n  ##      ff[[3]] &lt;- as.name(paste0(\"x\", i))\n  mods[[i]] &lt;- lmi &lt;- lm(ff, data = anscombe)\n # print(anova(lmi))\n}\n\n#sapply(mods, coef)  # Note the use of this function\n#lapply(mods, function(fm) coef(summary(fm)))\n\n# Preparing for the plots\nop &lt;- par(mfrow = c(2, 2), mar = 0.1+c(4,4,1,1), oma =  c(0, 0, 2, 0))\n\n# Plot charts using for loop\nfor(i in 1:4) {\n  ff[2:3] &lt;- lapply(paste0(c(\"y\",\"x\"), i), as.name)\n  plot(ff, data = anscombe, col = \"red\", pch = 21, bg = \"orange\", cex = 1.2,\n       xlim = c(3, 19), ylim = c(3, 13))\n  abline(mods[[i]], col = \"blue\")\n}\nmtext(\"Anscombe's 4 Regression data sets\", outer = TRUE, cex = 1.5)\n\n\n\n\n\n\n\nShow Hidden Code\nlibrary(proto)\nlibrary(gsubfn)\nlibrary(tidyverse)\n\n# Define elements in plant art\n# Each image corresponds to a different axiom, rules, angle and depth\n\n# Leaf of Fall\n\naxiom=\"X\"\nrules=list(\"X\"=\"F-[[X]+X]+F[+FX]-X\", \"F\"=\"FF\")\nangle=22.5\ndepth=6\n\n\nfor (i in 1:depth) axiom=gsubfn(\".\", rules, axiom)\n\nactions=str_extract_all(axiom, \"\\\\d*\\\\+|\\\\d*\\\\-|F|L|R|\\\\[|\\\\]|\\\\|\") %&gt;% unlist\n\nstatus=data.frame(x=numeric(0), y=numeric(0), alfa=numeric(0))\npoints=data.frame(x1 = 0, y1 = 0, x2 = NA, y2 = NA, alfa=90, depth=1)\n\n\n# Generating data\n# Note: may take a minute or two\n\nfor (action in actions)\n{\n  if (action==\"F\")\n  {\n    x=points[1, \"x1\"]+cos(points[1, \"alfa\"]*(pi/180))\n    y=points[1, \"y1\"]+sin(points[1, \"alfa\"]*(pi/180))\n    points[1,\"x2\"]=x\n    points[1,\"y2\"]=y\n    data.frame(x1 = x, y1 = y, x2 = NA, y2 = NA,\n               alfa=points[1, \"alfa\"],\n               depth=points[1,\"depth\"]) %&gt;% rbind(points)-&gt;points\n  }\n  if (action %in% c(\"+\", \"-\")){\n    alfa=points[1, \"alfa\"]\n    points[1, \"alfa\"]=eval(parse(text=paste0(\"alfa\",action, angle)))\n  }\n  if(action==\"[\"){\n    data.frame(x=points[1, \"x1\"], y=points[1, \"y1\"], alfa=points[1, \"alfa\"]) %&gt;%\n      rbind(status) -&gt; status\n    points[1, \"depth\"]=points[1, \"depth\"]+1\n  }\n\n  if(action==\"]\"){\n    depth=points[1, \"depth\"]\n    points[-1,]-&gt;points\n    data.frame(x1=status[1, \"x\"], y1=status[1, \"y\"], x2=NA, y2=NA,\n               alfa=status[1, \"alfa\"],\n               depth=depth-1) %&gt;%\n      rbind(points) -&gt; points\n    status[-1,]-&gt;status\n  }\n}\n\nggplot() +\n  geom_segment(aes(x = x1, y = y1, xend = x2, yend = y2),\n               lineend = \"round\",\n               color=\"red\", # Set your own Fall color?\n               data=na.omit(points)) +\n  coord_fixed(ratio = 1) +\n  theme_void() # No grid nor axes"
  },
  {
    "objectID": "posts/post-with-code/index.html#anscombe-1973-quartlet",
    "href": "posts/post-with-code/index.html#anscombe-1973-quartlet",
    "title": "Post With Code",
    "section": "Anscombe (1973) Quartlet",
    "text": "Anscombe (1973) Quartlet\ndata(anscombe) # Load Anscombe’s data View(anscombe) # View the data summary(anscombe)"
  },
  {
    "objectID": "posts/post-with-code/index.html#simple-version",
    "href": "posts/post-with-code/index.html#simple-version",
    "title": "Post With Code",
    "section": "Simple version",
    "text": "Simple version\nplot(anscombe\\(x1,anscombe\\)y1) summary(anscombe)"
  },
  {
    "objectID": "posts/post-with-code/index.html#fancy-version-per-help-file",
    "href": "posts/post-with-code/index.html#fancy-version-per-help-file",
    "title": "Post With Code",
    "section": "Fancy version (per help file)",
    "text": "Fancy version (per help file)\nff &lt;- y ~ x mods &lt;- setNames(as.list(1:4), paste0(“lm”, 1:4))"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "…career advancement in data science.",
    "section": "",
    "text": "Sample R codes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nWelcome To My Blog\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About Me",
    "section": "",
    "text": "I am Adelusi, Bamidele Samuel, an accomplished and dedicated IT professional with a strong background in Computer Science - Software Development, Data Science, Database Administration and DevOps. Over the years, I have acquired a comprehensive educational foundation and a wealth of practical experience that enables me to contribute significantly to my Professional field. My academic journey began at Yaba College of Technology, Nigeria, where I obtained a degree in Computer Science in 2001, marking the inception of my passion for technology and innovation.\nMy ongoing pursuit of a Master’s degree in Social Data Analytics and Research at the University of Texas at Dallas is an evidence of my determination to stay at the forefront of technological advancements. This program is enhancing my skills in harnessing data to derive insights, enabling me to make informed decisions that bridge the gap between technology and societal needs.\nMy pursuit of academic excellence led me to acquire a Master’s degree in Business Computing (2018) from the University of Ibadan. This program fortified my understanding of the intersection between business operations and technology, providing me with a solid foundation in blending computational thinking with strategic decision-making.\nTo enhance my business intelligence and managerial skills, I completed a Master of Business Administration - MBA (2010) program at Ladoke Akintola University of Technology. This program equipped me with the necessary tools to develop and manage complex financial applications, bridging the gap between technology and business.\nPrior to my Master degrees, I furthered my knowledge in Computer Science with a Post Graduate Diploma from Lagos State University. This program honed my technical expertise and solidified my understanding of core computing concepts."
  },
  {
    "objectID": "posts/welcome/index.html",
    "href": "posts/welcome/index.html",
    "title": "Welcome To My Blog",
    "section": "",
    "text": "Welcome to my SamBlog!\n\nI am Data Scientist, Software Developer, Cloud Solutions Architect, DevOps Engineer and IT Consultant.\n\nData Analytics, A program that prepares individuals to apply data science to generate insights from data and identify and predict trends. Includes instruction in computer databases, computer programming, inference, machine learning, optimization, probability and stochastic models, statistics, strategy, uncertainty quantification, and visual analytics. ."
  },
  {
    "objectID": "contact.html",
    "href": "contact.html",
    "title": "Contact",
    "section": "",
    "text": "To learn more about me, please visit:\nhttps://www.linkedin.com/in/dele-adelusi/."
  },
  {
    "objectID": "hideCode.html",
    "href": "hideCode.html",
    "title": "Hide Code",
    "section": "",
    "text": "Show Hidden Code\ndata(anscombe)\nff &lt;- y ~ x\nmods &lt;- setNames(as.list(1:4), paste0(\"lm\", 1:4))\n\n# Plot using for loop\nfor(i in 1:4) {\n  ff[2:3] &lt;- lapply(paste0(c(\"y\",\"x\"), i), as.name)\n  ## or   ff[[2]] &lt;- as.name(paste0(\"y\", i))\n  ##      ff[[3]] &lt;- as.name(paste0(\"x\", i))\n  mods[[i]] &lt;- lmi &lt;- lm(ff, data = anscombe)\n  #print(anova(lmi))\n}\n\n# Preparing for the plots\nop &lt;- par(mfrow = c(2, 2), mar = 0.1+c(4,4,1,1), oma =  c(0, 0, 2, 0))\n\n# Plot charts using for loop\nfor(i in 1:4) {\n  ff[2:3] &lt;- lapply(paste0(c(\"y\",\"x\"), i), as.name)\n  plot(ff, data = anscombe, col = \"red\", pch = 21, bg = \"orange\", cex = 1.2,\n       xlim = c(3, 19), ylim = c(3, 13))\n  abline(mods[[i]], col = \"blue\")\n}\nmtext(\"Anscombe's 4 Regression data sets\", outer = TRUE, cex = 1.5)"
  },
  {
    "objectID": "posts/post-with-code/assignment1.html",
    "href": "posts/post-with-code/assignment1.html",
    "title": "Post With Sample R codes",
    "section": "",
    "text": "Show Hidden Code\nlibrary(proto)\nlibrary(gsubfn)\nlibrary(tidyverse)\n\ndata(anscombe)  # Load Anscombe's data\n\n## Fancy version (per help file)\n\nff &lt;- y ~ x\nmods &lt;- setNames(as.list(1:4), paste0(\"lm\", 1:4))\n\n# Plot using for loop\nfor(i in 1:4) {\n  ff[2:3] &lt;- lapply(paste0(c(\"y\",\"x\"), i), as.name)\n  ## or   ff[[2]] &lt;- as.name(paste0(\"y\", i))\n  ##      ff[[3]] &lt;- as.name(paste0(\"x\", i))\n  mods[[i]] &lt;- lmi &lt;- lm(ff, data = anscombe)\n # print(anova(lmi))\n}\n\n#sapply(mods, coef)  # Note the use of this function\n#lapply(mods, function(fm) coef(summary(fm)))\n\n# Preparing for the plots\nop &lt;- par(mfrow = c(2, 2), mar = 0.1+c(4,4,1,1), oma =  c(0, 0, 2, 0))\n\n# Plot charts using for loop\nfor(i in 1:4) {\n  ff[2:3] &lt;- lapply(paste0(c(\"y\",\"x\"), i), as.name)\n  plot(ff, data = anscombe, col = \"red\", pch = 21, bg = \"orange\", cex = 1.2,\n       xlim = c(3, 19), ylim = c(3, 13))\n  abline(mods[[i]], col = \"blue\")\n}\nmtext(\"Anscombe's 4 Regression data sets\", outer = TRUE, cex = 1.5)\n\n\n\n\n\n\n\nShow Hidden Code\nlibrary(proto)\nlibrary(gsubfn)\nlibrary(tidyverse)\n\n# Define elements in plant art\n# Each image corresponds to a different axiom, rules, angle and depth\n\n# Leaf of Fall\n\naxiom=\"X\"\nrules=list(\"X\"=\"F-[[X]+X]+F[+FX]-X\", \"F\"=\"FF\")\nangle=22.5\ndepth=6\n\n\nfor (i in 1:depth) axiom=gsubfn(\".\", rules, axiom)\n\nactions=str_extract_all(axiom, \"\\\\d*\\\\+|\\\\d*\\\\-|F|L|R|\\\\[|\\\\]|\\\\|\") %&gt;% unlist\n\nstatus=data.frame(x=numeric(0), y=numeric(0), alfa=numeric(0))\npoints=data.frame(x1 = 0, y1 = 0, x2 = NA, y2 = NA, alfa=90, depth=1)\n\n\n# Generating data\n# Note: may take a minute or two\n\nfor (action in actions)\n{\n  if (action==\"F\")\n  {\n    x=points[1, \"x1\"]+cos(points[1, \"alfa\"]*(pi/180))\n    y=points[1, \"y1\"]+sin(points[1, \"alfa\"]*(pi/180))\n    points[1,\"x2\"]=x\n    points[1,\"y2\"]=y\n    data.frame(x1 = x, y1 = y, x2 = NA, y2 = NA,\n               alfa=points[1, \"alfa\"],\n               depth=points[1,\"depth\"]) %&gt;% rbind(points)-&gt;points\n  }\n  if (action %in% c(\"+\", \"-\")){\n    alfa=points[1, \"alfa\"]\n    points[1, \"alfa\"]=eval(parse(text=paste0(\"alfa\",action, angle)))\n  }\n  if(action==\"[\"){\n    data.frame(x=points[1, \"x1\"], y=points[1, \"y1\"], alfa=points[1, \"alfa\"]) %&gt;%\n      rbind(status) -&gt; status\n    points[1, \"depth\"]=points[1, \"depth\"]+1\n  }\n\n  if(action==\"]\"){\n    depth=points[1, \"depth\"]\n    points[-1,]-&gt;points\n    data.frame(x1=status[1, \"x\"], y1=status[1, \"y\"], x2=NA, y2=NA,\n               alfa=status[1, \"alfa\"],\n               depth=depth-1) %&gt;%\n      rbind(points) -&gt; points\n    status[-1,]-&gt;status\n  }\n}\n\nggplot() +\n  geom_segment(aes(x = x1, y = y1, xend = x2, yend = y2),\n               lineend = \"round\",\n               color=\"red\", # Set your own Fall color?\n               data=na.omit(points)) +\n  coord_fixed(ratio = 1) +\n  theme_void() # No grid nor axes"
  },
  {
    "objectID": "assignment1.html",
    "href": "assignment1.html",
    "title": "EPPS 6302: Data Visualization - Assignment 1",
    "section": "",
    "text": "Question 1:\n\n\nShow Hidden Code\nlibrary(proto)\nlibrary(gsubfn)\nlibrary(tidyverse)\n\ndata(anscombe)  # Load Anscombe's data\n\n## Fancy version (per help file)\n\nff &lt;- y ~ x\nmods &lt;- setNames(as.list(1:4), paste0(\"lm\", 1:4))\n\n# Plot using for loop\nfor(i in 1:4) {\n  ff[2:3] &lt;- lapply(paste0(c(\"y\",\"x\"), i), as.name)\n  ## or   ff[[2]] &lt;- as.name(paste0(\"y\", i))\n  ##      ff[[3]] &lt;- as.name(paste0(\"x\", i))\n  mods[[i]] &lt;- lmi &lt;- lm(ff, data = anscombe)\n # print(anova(lmi))\n}\n\n#sapply(mods, coef)  # Note the use of this function\n#lapply(mods, function(fm) coef(summary(fm)))\n\n# Preparing for the plots\nop &lt;- par(mfrow = c(2, 2), mar = 0.1+c(4,4,1,1), oma =  c(0, 0, 2, 0))\n\n# Plot charts using for loop\nfor(i in 1:4) {\n  ff[2:3] &lt;- lapply(paste0(c(\"y\",\"x\"), i), as.name)\n  plot(ff, data = anscombe, col = \"red\", pch = 21, bg = \"blue\", cex = 1.2,\n       xlim = c(3, 19), ylim = c(3, 13))\n  abline(mods[[i]], col = \"green\")\n}\nmtext(\"Anscombe's 4 Regression data sets\", outer = TRUE, cex = 1.5)\n\n\n\n\n\nQuestion 2: Generative Art\nGenerative Art is a form of art created using algorithms, computer programs, or systematic processes to generate artwork. It often involves the use of randomness, mathematical equations, and rules to produce unique and unpredictable visual or audio compositions.\nGenerative Art is a process of algorithmically generating new ideas, forms, shapes, colors or patterns. First, you create rules that provide boundaries for the creation process. Then a computer follows those rules to produce new works on your behalf.\nGenerative art is a versatile and constantly evolving field that pushes the boundaries of traditional art forms by leveraging the capabilities of computers and algorithms to create unique and dynamic visual experiences.\nSome Examples of Generative Art:\n\n\n\n\n\n\n\nQuestion 3: Fall.R with my color\n\n\nShow Hidden Code\nlibrary(proto)\nlibrary(gsubfn)\nlibrary(tidyverse)\n\n# Define elements in plant art\n# Each image corresponds to a different axiom, rules, angle and depth\n\n# Leaf of Fall\n\naxiom=\"X\"\nrules=list(\"X\"=\"F-[[X]+X]+F[+FX]-X\", \"F\"=\"FF\")\nangle=22.5\ndepth=6\n\n\nfor (i in 1:depth) axiom=gsubfn(\".\", rules, axiom)\n\nactions=str_extract_all(axiom, \"\\\\d*\\\\+|\\\\d*\\\\-|F|L|R|\\\\[|\\\\]|\\\\|\") %&gt;% unlist\n\nstatus=data.frame(x=numeric(0), y=numeric(0), alfa=numeric(0))\npoints=data.frame(x1 = 0, y1 = 0, x2 = NA, y2 = NA, alfa=90, depth=1)\n\n\n# Generating data\n# Note: may take a minute or two\n\nfor (action in actions)\n{\n  if (action==\"F\")\n  {\n    x=points[1, \"x1\"]+cos(points[1, \"alfa\"]*(pi/180))\n    y=points[1, \"y1\"]+sin(points[1, \"alfa\"]*(pi/180))\n    points[1,\"x2\"]=x\n    points[1,\"y2\"]=y\n    data.frame(x1 = x, y1 = y, x2 = NA, y2 = NA,\n               alfa=points[1, \"alfa\"],\n               depth=points[1,\"depth\"]) %&gt;% rbind(points)-&gt;points\n  }\n  if (action %in% c(\"+\", \"-\")){\n    alfa=points[1, \"alfa\"]\n    points[1, \"alfa\"]=eval(parse(text=paste0(\"alfa\",action, angle)))\n  }\n  if(action==\"[\"){\n    data.frame(x=points[1, \"x1\"], y=points[1, \"y1\"], alfa=points[1, \"alfa\"]) %&gt;%\n      rbind(status) -&gt; status\n    points[1, \"depth\"]=points[1, \"depth\"]+1\n  }\n\n  if(action==\"]\"){\n    depth=points[1, \"depth\"]\n    points[-1,]-&gt;points\n    data.frame(x1=status[1, \"x\"], y1=status[1, \"y\"], x2=NA, y2=NA,\n               alfa=status[1, \"alfa\"],\n               depth=depth-1) %&gt;%\n      rbind(points) -&gt; points\n    status[-1,]-&gt;status\n  }\n}\n\nggplot() +\n  geom_segment(aes(x = x1, y = y1, xend = x2, yend = y2),\n               lineend = \"round\",\n               color=\"blue\", # Set your own Fall color?\n               data=na.omit(points)) +\n  coord_fixed(ratio = 1) +\n  theme_void() # No grid nor axes\n\n\n\n\n\nQuestion 4: A critique on a chart by Nathan Yau’s example.\nhttps://www.nytimes.com/interactive/2023/02/07/sports/basketball/lebron-james-kareem-abdul-jabbar-points.html\n\n\n\nChart Purpose - How LeBron James Outscored Kareem Abdul-Jabbar and All the N.B.A. Greats. The chart shows the comparison of Basketball players LeBron James and Kareem Abdul-Jabbar performance over a period of time. James taking the lead after starting at age 18 with 38,390 points.\nData Accuracy - The accuracy of the Data was provided to populated the remarkable events. The N.B.A. introduced the 3-pointer in the 1979-80 season, halfway through Abdul-Jabbar's career. For the next decade, the shot was considered a novelty, a \"break glass in case of emergency\" kind of heave. Abdul-Jabbar hit just one 3-pointer in his career. James is ninth in career 3-pointers after relying more on long-range shooting as he aged (it's usually easier on the body) and as 3-pointers soared in popularity.\nClarity and Simplicity - Simplicity is key to effective data visualization. The chart is easy to understand at first glance. Elements or distractions that may confuse the viewers were avoided. Use of Data Analytics with accurate data show the simplicity and accuracy of the data.\nVisual Encoding - Use of graphical illustration was clearly seen of the perform of LeBron James compared with other great players over the years. The use of chart titles and labels to give information were shown.\nData Integrity - Any uncertainties or biases in the data can significantly impact the credibility of the chart. The accuracy and reliability of the data source and methodology used to create the chart were clearly shown. The accuracy and real data provided over a period without any alterations give a better understanding and accuracy of the chart.\nUse of Color - Nathan Yau often discusses the use of color in data visualizations. The illustration of the chart with use of simple colors (blue, black and ashes) were clearly seen.\nStorytelling - Effective data visualization often tells a story. The chart tells the story. No one thought LeBron James would overtake Kareem Abdul-Jabbar to become the N.B.A.'s career scoring leader when he came to the league as an 18-year-old. It didn't seem like anyone could. But James, with 38,390 points, has broken Abdul-Jabbar's record at 38 years old, an age long after most players are done scoring any points, much less the 30.2 points per game James is averaging this season."
  },
  {
    "objectID": "datavisual.html",
    "href": "datavisual.html",
    "title": "EPPS 6356: Data Visualization",
    "section": "",
    "text": "Assignments: -\nAssignment 1\nAssignment 2\nAssignment 3\nAssignment 4"
  },
  {
    "objectID": "datamethod.html",
    "href": "datamethod.html",
    "title": "EPPS 6302: Methods of Data Collections & Production.",
    "section": "",
    "text": "Assignments: -\nAssignment 1\nAssignment 2\nAssignment 3\nAssignment 4"
  },
  {
    "objectID": "assignment2.html",
    "href": "assignment2.html",
    "title": "Methods of Data Collection & Production - Assignment 2:",
    "section": "",
    "text": "Section A: Building a Qualtrics Panel\nPanel List details:\n\nSection B: Google Trends data\n\n#install.packages(\"gtrendsR\")\nlibrary(gtrendsR)\nBidenTrumpElection = gtrends(c(\"Trump\",\"Biden\",\"election\"), time = \"all\")\npar(family=\"Georgia\")\nplot(BidenTrumpElection)\n\n\n\n##tg = gtrends(\"transgender\", time = \"all\")\n\n# Example: Transgender, Feminism and Women's rights\n# \nplot(gtrends(c(\"transgender\"), time = \"all\"))\n\n\n\n##data(\"countries\")\nplot(gtrends(c(\"transgender\"), geo = \"GB\", time = \"all\")) \n\n\n\nplot(gtrends(c(\"transgender\"), geo = c(\"US\",\"GB\",\"TW\"), time = \"all\")) \n\n\n\n##tg_iot = tg$interest_over_time\n##tw = gtrends(c(\"transgender\",\"women right\"), time = \"all\")\n##tw1 = data.frame(tw$interest_over_time)\nplot(gtrends(c(\"transgender\",\"women right\",\"feminism\"), time = \"all\"))\n\n\n\n##data(\"categories\")\n\n\nDifferences:\n\n\n`gtrendsR` is an R package that provides an interface for accessing and working with Google Trends data. An interface for retrieving and displaying the information returned online by Google Trends is provided. Trends (number of hits) over the time as well as geographic representation of the results can be displayed.\nThe `gtrendsR` default method performs a Google Trends query for the query argument and session ‘session’. It Plots Google Trends interest over time as well as geographic representation of the results can be displayed"
  },
  {
    "objectID": "datvisual/vassignment2.html",
    "href": "datvisual/vassignment2.html",
    "title": "EPPS 6302: Data Visualization - Assignment 2",
    "section": "",
    "text": "Question 1:\n\n\nShow Hidden Code\nlibrary(proto)\nlibrary(gsubfn)\nlibrary(tidyverse)\n\ndata(anscombe)  # Load Anscombe's data\n\n## Fancy version (per help file)\n\nff &lt;- y ~ x\nmods &lt;- setNames(as.list(1:4), paste0(\"lm\", 1:4))\n\n# Plot using for loop\nfor(i in 1:4) {\n  ff[2:3] &lt;- lapply(paste0(c(\"y\",\"x\"), i), as.name)\n  ## or   ff[[2]] &lt;- as.name(paste0(\"y\", i))\n  ##      ff[[3]] &lt;- as.name(paste0(\"x\", i))\n  mods[[i]] &lt;- lmi &lt;- lm(ff, data = anscombe)\n # print(anova(lmi))\n}\n\n#sapply(mods, coef)  # Note the use of this function\n#lapply(mods, function(fm) coef(summary(fm)))\n\n# Preparing for the plots\nop &lt;- par(mfrow = c(2, 2), mar = 0.1+c(4,4,1,1), oma =  c(0, 0, 2, 0))\n\n# Plot charts using for loop\nfor(i in 1:4) {\n  ff[2:3] &lt;- lapply(paste0(c(\"y\",\"x\"), i), as.name)\n  plot(ff, data = anscombe, col = \"red\", pch = 21, bg = \"blue\", cex = 1.2,\n       xlim = c(3, 19), ylim = c(3, 13))\n  abline(mods[[i]], col = \"green\")\n}\nmtext(\"Anscombe's 4 Regression data sets\", outer = TRUE, cex = 1.5)\n\n\n\n\n\nQuestion 3: Fall.R with my color\n\n\nShow Hidden Code\nlibrary(proto)\nlibrary(gsubfn)\nlibrary(tidyverse)\n\n# Define elements in plant art\n# Each image corresponds to a different axiom, rules, angle and depth\n\n# Leaf of Fall\n\naxiom=\"X\"\nrules=list(\"X\"=\"F-[[X]+X]+F[+FX]-X\", \"F\"=\"FF\")\nangle=22.5\ndepth=6\n\n\nfor (i in 1:depth) axiom=gsubfn(\".\", rules, axiom)\n\nactions=str_extract_all(axiom, \"\\\\d*\\\\+|\\\\d*\\\\-|F|L|R|\\\\[|\\\\]|\\\\|\") %&gt;% unlist\n\nstatus=data.frame(x=numeric(0), y=numeric(0), alfa=numeric(0))\npoints=data.frame(x1 = 0, y1 = 0, x2 = NA, y2 = NA, alfa=90, depth=1)\n\n\n# Generating data\n# Note: may take a minute or two\n\nfor (action in actions)\n{\n  if (action==\"F\")\n  {\n    x=points[1, \"x1\"]+cos(points[1, \"alfa\"]*(pi/180))\n    y=points[1, \"y1\"]+sin(points[1, \"alfa\"]*(pi/180))\n    points[1,\"x2\"]=x\n    points[1,\"y2\"]=y\n    data.frame(x1 = x, y1 = y, x2 = NA, y2 = NA,\n               alfa=points[1, \"alfa\"],\n               depth=points[1,\"depth\"]) %&gt;% rbind(points)-&gt;points\n  }\n  if (action %in% c(\"+\", \"-\")){\n    alfa=points[1, \"alfa\"]\n    points[1, \"alfa\"]=eval(parse(text=paste0(\"alfa\",action, angle)))\n  }\n  if(action==\"[\"){\n    data.frame(x=points[1, \"x1\"], y=points[1, \"y1\"], alfa=points[1, \"alfa\"]) %&gt;%\n      rbind(status) -&gt; status\n    points[1, \"depth\"]=points[1, \"depth\"]+1\n  }\n\n  if(action==\"]\"){\n    depth=points[1, \"depth\"]\n    points[-1,]-&gt;points\n    data.frame(x1=status[1, \"x\"], y1=status[1, \"y\"], x2=NA, y2=NA,\n               alfa=status[1, \"alfa\"],\n               depth=depth-1) %&gt;%\n      rbind(points) -&gt; points\n    status[-1,]-&gt;status\n  }\n}\n\nggplot() +\n  geom_segment(aes(x = x1, y = y1, xend = x2, yend = y2),\n               lineend = \"round\",\n               color=\"blue\", # Set your own Fall color?\n               data=na.omit(points)) +\n  coord_fixed(ratio = 1) +\n  theme_void() # No grid nor axes"
  }
]